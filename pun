#!/bin/bash
#
# pun - Pacman Update Notifier
# 
# v0.2 / 2015.06.17
#
# Â© 2015 Bernd Busse, Daniel Jankowski
# Licensed under the LGPLv3
#

LAST_MAIL_SAVE=/var/lib/pun/mail_save.dat
LAST_CHECK_SAVE=/var/lib/pun/check_save.dat
MAIL_FILE=/var/lib/pun/sendmail.txt

# get input args

args="$@"
arg_num=$( echo -e "${args}" | wc -l )

for arg in ${args}; do
    if [ "${arg}" = "-h" ]; then
        echo -e "Usage: pun [arg1] [arg2]"
        echo -e "    -p    Use Pacman"
        echo -e "    -n    Send no mail"
        echo -e "\nIf package-query is installed, it will be the default package-manager for pun"
        exit 1
    elif [ "${arg}" = "-p" ]; then
         _set_pacman=1   
    elif [ "${arg}" = "-n" ]; then
        _no_mail=1
    fi
done

# check for pacman and package-query
if [[ -x "$( which pacman 2> /dev/null )" ]]; then
    _pacman="$( which pacman )"
else
    echo "Error: cannot find pacman. Your system is weird!"
    exit 1
fi

if [[ -x "$( which package-query 2> /dev/null )" ]] && [[ $_set_pacman -ne 1 ]]; then
    _query="$( which package-query )"
    list_cmd="$_query -QAu"
else
    list_cmd="$_pacman --color never -Qu"
fi

# update package database
$_pacman -Sy >& /dev/null
if (( $? != 0 )); then
    echo "Error: cannot update database (Maybe no sudo?)"
    exit 1
fi

# get updatelist
pkg_list="$( $list_cmd 2> /dev/null )"
if (( $? != 0 )); then
    echo "Error: cannot fetch update list"
    exit 1
fi

num_pkg="$( echo -e "${pkg_list}" | wc -l )"
last_upd="$( grep -e 'starting full system upgrade' /var/log/pacman.log | sed -re 's/^\[([0-9]{4}-[0-9]{2}-[0-9]{2}\s[0-9]{2}:[0-9]{2})\]\s.*$/\1/g' | tail -n -1 )"

# print message
if (( $num_pkg == 0 )); then
    echo "Last update: $last_upd"
    echo "System is up to date."
elif (( $_no_mail == 1 )); then
    # print updates to terminal with -n flag
    echo "Last update: $last_upd."
    echo "You have $num_pkg updates:"
    _old_ifs=$IFS
    echo -e "$pkg_list" | while IFS= read -r pkg; do
        echo "    :: $pkg" 
    done
    IFS=$_old_ifs
else
    # should we send a mail?
    if [[ -e "$LAST_MAIL_SAVE" ]]; then
        # read last_mail date from file
        last_mail="$( cat "$LAST_MAIL_SAVE" )"
        mail_sec=$( date -d "$last_mail" +%s )
    else
        mail_sec=0
    fi

    if [[ -e "$LAST_CHECK_SAVE" ]]; then
        # read package numer of last check from file
        last_num="$( cat "$LAST_CHECK_SAVE" )"
    else
        last_num=0
    fi

    update_sec=$( date -d "$last_upd" +%s )

    if (( $mail_sec < $update_sec || $last_num < $num_pkg )); then
        echo "Last update: $last_upd"
        echo "You have $num_pkg updates. Sending mail..."
        
        # write to temporary mail file
        echo "Last update: $last_upd." > $MAIL_FILE
        echo "You have $num_pkg updates:" >> $MAIL_FILE
        _old_ifs=$IFS
        echo -e "$pkg_list" | while IFS= read -r pkg; do
            echo "    :: $pkg" >> $MAIL_FILE
        done
        IFS=$_old_ifs

        # save state
        date +"%Y-%m-%d %H:%M" > $LAST_MAIL_SAVE
        echo "$num_pkg" > $LAST_CHECK_SAVE
    fi
fi

